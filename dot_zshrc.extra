#-------------------------------------------------------------------
#
# ░█▀█░█▀█░█░█░█▀▄░█▀█░█░░░█░░░░░▀▀█░█▀▀░█░█░░░█▀▀░█░█░▀█▀░█▀▄░█▀█
# ░█▀▀░█▀█░░█░░█▀▄░█▀█░█░░░█░░░░░▄▀░░▀▀█░█▀█░░░█▀▀░▄▀▄░░█░░█▀▄░█▀█
# ░▀░░░▀░▀░░▀░░▀▀░░▀░▀░▀▀▀░▀▀▀░░░▀▀▀░▀▀▀░▀░▀░░░▀▀▀░▀░▀░░▀░░▀░▀░▀░▀
#
# ZSH extra configuration, (c) Pablo Navais <pnavais@gmail.com> 2025
# ------------------------------------------------------------------

# Misc
# ----

# Get current IP
alias myip="curl http://ipecho.net/plain; echo"

 # Make colorcoding available for everyone
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset

# Functions
# ---------

# Creates an archive (*.tar.gz) from a given directory
function maketar() { tar cvzf "${1%%/}.tar.gz"  "${1%%/}/"; }


# Custom neovim fast switcher
function nvims() {
    find -L "${XDG_CONFIG_HOME:-$HOME/.config}" -mindepth 2 -maxdepth 2 -name init.lua -o -name init.vim | \
        awk -F/ '{print $(NF-1)}' | \
        fzf --prompt ' Neovim config  ' --layout=reverse --border --exit-0 |\
        xargs -d$'\n' -n1 bash -c 'NVIM_APPNAME="$1" nvim' --
}

# Setup nvim distributions creating wrapper scripts.
function setup_nvims() {

    # Create Nvim wrapper scripts for available distributions
    local -A nv_installs
    local -A nv_aliases
    while IFS= read -r line; do
	    nv_installs[$line]=$line
    done < <(find -L "${XDG_CONFIG_HOME:-$HOME/.config}" -mindepth 2 -maxdepth 2 -name init.lua -o -name init.vim | awk -F/ '{print $(NF-1)}')

    for nv_inst in ${(k)nv_installs}
    do
	    alias_name=${nv_inst:l}
	    [[ $alias_name != "nv"* ]] && alias_name="nv-${alias_name}" || alias_name="nv-${alias_name#nv}"
	    alias_name=${alias_name%vim}

            # We are creating if needed wrapper scripts for all Nvim distros
	    # because whenever we use an alias or function in $EDITOR env var it is not quite supported by 
	    # some tools (e.g. chezmoi). However feel free to uncomment any other option (alias or function)

	    #eval "alias $alias_name=\"NVIM_APPNAME=\\\"$nv_inst\\\" nvim\"" # Uncomment this line to create just an alias
	    #eval "function $alias_name() { NVIM_APPNAME=\"$nv_inst\" nvim \$@}" # Uncomment this line to create a function

	    # Check wrapper script is in path
	    	    # Check wrapper script is in path
	    if [[ ! -e /usr/local/bin/$alias_name ]]; then
		command cat <<-EOF > /usr/local/bin/$alias_name
		#!/usr/bin/env sh
		NVIM_APPNAME="$nv_inst" nvim \$@
		EOF
		chmod +x /usr/local/bin/$alias_name
	    fi
	    nv_aliases[$alias_name]=$alias_name
    done

    # Cleanup Nvim wrapper scripts for distributions not available anymore
    local -A nv_wrappers
    while IFS= read -r line; do
      nv_wrappers[$line]=$line
    done < <(find -L /usr/local/bin -type f -name "nv-*" -exec basename {} \;)

    for nv_inst in ${(k)nv_wrappers}
    do
      if [[ ! ${nv_aliases[(r)$nv_inst]} ]]; then
		    rm /usr/local/bin/$nv_inst
	    fi
    done
}

zsh-defer setup_nvims
